<div id="tic-tac-toe-board">
    <div class="square"></div">
    <div class="square"></div">
    <div class="square"></div">
    <div class="square"></div">
    <div class="square"></div">
    <div class="square"></div">
    <div class="square"></div">
    <div class="square"></div">
    <div class="square"></div">
</div>

<button id="send">click me</button>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="http://localhost:3176/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.ticTacHub;
            // Create a function that the hub can call back to display messages.
            chat.client.allGood = function (name, message) {
                alert(name + message);
                // Add the message to the page.
                //$('#discussion').append('<li><strong>' + htmlEncode(name)
                //    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            //// Set initial focus to message input box.
            //$('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#send').click(function () {
                    // Call the Send method on the hub.
                    chat.server.checkMe("kevin is ", "awesome");
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}